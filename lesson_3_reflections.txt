When would you want to use a remote repository rather than keeping all your work
local?

In collaborated projects, on multiple systems, to share the code with others.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

The changes made on remote may not be desired every time or those may be old. If git stays
automatically up-to-date then some undesired changes may break the code or any local changes
done to the code may conflict with the ones on remote.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

Fork: Make a copy of the repository from other user on github server
Clone: Make an exact copy of the entire repository on a local system
Branch: Make a seperate branch of the code on the same repository

What is the benefit of having a copy of the last known state of the remote
stored locally?

You can track the changes of the remote when pulling in again with the help of the
last known state.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

I would collaborate by sharing the code manually or through googledocs. It would be
easier to collaborate using GitHub.

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
